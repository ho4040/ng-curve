"use strict";angular.module("ngCurve",[]).directive("curveEditor",["$timeout",function(t){return{restrict:"E",scope:{dotData:"@"},template:"<div><canvas id='grid'></canvas><canvas id='dots'></canvas></div>",link:function(e,i,o){i.addClass("curve-control");var s=function(t,i){var o={x:t/e.size.width,y:i/e.size.height};return e.dots.push(o),e.dots.sort(function(t,e){return t.x-e.x}),o},n=function(t,i){return e.dots.find(function(o){var s=o.x*e.size.width,n=o.y*e.size.height;return Math.abs(s-t)<5&&Math.abs(n-i)<5})},a=function(){for(var t=[],i=0;i<e.dots.length;i++){if(e.state.selectedDot==e.dots[i])if(0===i){if(e.dots[i+1].x<=e.dots[i].x)continue}else if(i==e.dots.length-1){if(e.dots[i-1].x>=e.dots[i].x)continue}else if(e.dots[i-1].x>=e.dots[i].x||e.dots[i+1].x<=e.dots[i].x)continue;t.push(e.dots[i])}return t};e.redrawGrid=function(){var t=e.gridCanvas,i=t.getContext("2d");i.clearRect(0,0,t.width,t.height);for(var o=0;o<t.width;o+=10)i.moveTo(o,0),i.lineTo(o,e.size.height);for(var s=0;s<t.height;s+=10)i.moveTo(0,s),i.lineTo(e.size.width,s);i.strokeStyle="#ffffff",i.lineWidth=.5,i.stroke()},e.drawDots=function(){var t=e.curveCanvas,i=t.getContext("2d");i.clearRect(0,0,t.width,t.height);var o=a();i.lineWidth=1,o.forEach(function(o){i.beginPath(),o===e.state.selectedDot?i.strokeStyle="#ff0000":i.strokeStyle="#000000",i.arc(o.x*t.width,o.y*t.height,2,0,2*Math.PI),i.stroke()}),e.drawLine(o,i,t)},e.drawLine=function(t,i,o){i.beginPath(),i.strokeStyle="#000000",t[0].x>0&&(i.moveTo(0,t[0].y*o.height),i.lineTo(t[0].x*o.width,t[0].y*o.height));var s=[];t.forEach(function(t){s.push(t.x*o.width,t.y*o.height)}),i.curve(s,.5,25,!1),t[t.length-1].x<1&&(i.moveTo(t[t.length-1].x*o.width,t[t.length-1].y*o.height),i.lineTo(e.size.width,t[t.length-1].y*o.height)),i.stroke()},i.ready(function(){e.size={},e.state={mode:null},t(function(){e.gridCanvas=i.find("canvas")[0],e.curveCanvas=i.find("canvas")[1],e.size.height=i.find("canvas")[0].offsetHeight,e.size.width=i.find("canvas")[0].offsetWidth,e.gridCanvas.width=e.size.width,e.gridCanvas.height=e.size.height,e.curveCanvas.width=e.size.width,e.curveCanvas.height=e.size.height,i.on("mousedown",function(t){var i=n(t.offsetX,t.offsetY);e.state.selectedDot=i||s(t.offsetX,t.offsetY),e.drawDots()}),i.on("mousemove",function(t){e.state.selectedDot&&(e.state.selectedDot.x=t.offsetX/e.size.width,e.state.selectedDot.y=t.offsetY/e.size.height,e.drawDots())}),i.on("mouseup",function(t){t.ctrlKey?(e.dots=a(),e.dots.splice(e.dots.indexOf(e.state.selectedDot),1)):e.dots=a(),e.state.selectedDot=null,e.drawDots(),e.$apply()}),i.onResize=function(t){e.redrawGrid(),e.drawDots()},i.onResize()})})},controller:["$scope","$parse",function(t,e){var i=e(t.dotData);console.log(i);var o=i.assign;t.$watch("dots",function(e){"function"==typeof o&&o(t.$parent,e)}),t.dots=i(t.$parent),t.dots||(t.dots=[{x:0,y:1},{x:1,y:0}])}]}}]);